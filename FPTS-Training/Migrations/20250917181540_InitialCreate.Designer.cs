// <auto-generated />
using System;
using Shared.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace FPTS_Training.Migrations
{
    [DbContext(typeof(FPTSTrainingDBContext))]
    [Migration("20250917181540_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("HANVV")
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPTS_Training.Models.Buyers", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR2(100 BYTE)")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("product_insert_seq.NEXTVAL");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("NAME");

                    b.Property<long>("Offsets")
                        .HasColumnType("NUMBER(19,0)")
                        .HasColumnName("OFFSETS");

                    b.Property<short>("Partitions")
                        .HasColumnType("NUMBER(5,0)")
                        .HasColumnName("PARTITIONS");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(25 BYTE)")
                        .HasColumnName("PAYMENT_METHOD");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("BUYERS", "HANVV");
                });

            modelBuilder.Entity("FPTS_Training.Models.OrderItems", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR2(100 BYTE)")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("product_insert_seq.NEXTVAL");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("NAME");

                    b.Property<long>("Offsets")
                        .HasColumnType("NUMBER(19,0)")
                        .HasColumnName("OFFSETS");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("ORDER_ID");

                    b.Property<short>("Partitions")
                        .HasColumnType("NUMBER(5,0)")
                        .HasColumnName("PARTITIONS");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("PRODUCT_ID");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("NUMBER(18,2)")
                        .HasColumnName("UNIT_PRICE");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("UNITS");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("ORDER_ITEMS", "HANVV");
                });

            modelBuilder.Entity("FPTS_Training.Models.Orders", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR2(100 BYTE)")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("product_insert_seq.NEXTVAL");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("BuyerId")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("BUYER_ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("NAME");

                    b.Property<long>("Offsets")
                        .HasColumnType("NUMBER(19,0)")
                        .HasColumnName("OFFSETS");

                    b.Property<short>("Partitions")
                        .HasColumnType("NUMBER(5,0)")
                        .HasColumnName("PARTITIONS");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(1,0)")
                        .HasColumnName("STATUS");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("ORDERS", "HANVV");
                });

            modelBuilder.Entity("FPTS_Training.Models.Products", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR2(100 BYTE)")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("product_insert_seq.NEXTVAL");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("NAME");

                    b.Property<long>("Offsets")
                        .HasColumnType("NUMBER(19,0)")
                        .HasColumnName("OFFSETS");

                    b.Property<short>("Partitions")
                        .HasColumnType("NUMBER(5,0)")
                        .HasColumnName("PARTITIONS");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(1,0)")
                        .HasColumnName("STATUS");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("PRODUCTS", "HANVV");
                });
#pragma warning restore 612, 618
        }
    }
}
